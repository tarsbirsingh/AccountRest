@isTest
private class AccountShowTest {
    
    //Postive Test Case of Get
    @isTest static void testGet() {
        
        //ARRANGE - setup request
        Account acc = createTestData();
        String AccName = acc.Name;
        RestRequest request = new RestRequest();
        RestResponse res = new RestResponse();
        request.requestUri ='https://yts-dev-ed.salesforce.com/services/apexrest/account/'+ AccName;
        request.addHeader('Content-Type', 'application/json');
        request.httpMethod = 'GET';
        request.requestBody = Blob.valueof('{}');
        RestContext.request = request;
        RestContext.response= res;
        
        Test.startTest();
        AccountShow.getAccount();
        Test.stopTest();
        //Verify Result
        Account accVer = [Select id,Name from Account Where Name = :AccName Limit 1];
        System.assertEquals('John',AccName);

        
    }
    
    //Negtive Test Case of Get 
    @isTest static void testNegGet() {
        
        //ARRANGE - setup request
        RestRequest request = new RestRequest();
        RestResponse res = new RestResponse();
        request.requestUri ='https://yts-dev-ed.salesforce.com/services/apexrest/account/';
        request.addHeader('Content-Type', 'application/json');
        request.httpMethod = 'GET';
        request.requestBody = Blob.valueof('{}');
        RestContext.request = request;
        RestContext.response= res;
        
        Test.startTest();
        AccountShow.getAccount();
        Test.stopTest();
    }
    
    //Postive Test Case of POST
    @isTest static void testPost(){  
        
        //ARRANGE - setup request
        RestRequest request = new RestRequest();
        RestResponse res = new RestResponse();
        request.addHeader('Content-Type', 'application/json');
        request.requestUri ='https://yts-dev-ed.salesforce.com/services/apexrest/account';
        request.httpMethod = 'POST';
        AccountShowWrapper jsonWrap = getAccWrap(); 
        System.debug('jsonWrap'+jsonWrap);
        String myJSON = JSON.serialize(jsonWrap);
        request.requestBody = Blob.valueof(myJSON);
        RestContext.request = request;
        RestContext.response= res;
        
        Test.startTest();
        AccountShow.postAccount();
        Test.stopTest();
        
        //Verify Result
        Account accVerPost = [Select id,Name from Account Where Name = :jsonWrap.Name Limit 1];
        System.assertEquals('Test',jsonWrap.Name);
        System.debug('Test'+jsonWrap.Name);
        System.assert(jsonWrap!= null);
        System.assert(myJSON!= null);
    }
    
    //Negtive Test Case of Post
    @isTest static void testNegPost(){  
        
        //ARRANGE - setup request
        RestRequest request = new RestRequest();
        RestResponse res = new RestResponse();
        request.addHeader('Content-Type', 'application/json');
        request.httpMethod = 'POST';
        request.requestBody = Blob.valueof('{}');
        RestContext.request = request;
        RestContext.response= res;
        
        Test.startTest();
        AccountShow.postAccount();
        Test.stopTest();
    }
    
    //Postive Test Case of DELETE
    @isTest static void testDelete(){ 
        
        //ARRANGE - setup request
        Account acc = createTestData();
        Account accDel = [Select id,Name from Account Where id =:acc.id  Limit 1];
        String AccName = accDel.Name;
        RestRequest request = new RestRequest();
        RestResponse res = new RestResponse();
        request.requestUri ='https://yts-dev-ed.salesforce.com/services/apexrest/account/'+ AccName;
        request.addHeader('Content-Type', 'application/json');
        request.httpMethod = 'DELETE';
        request.requestBody = Blob.valueof('{}');
        RestContext.request = request;
        RestContext.response= res;
        
        Test.startTest(); 
        AccountShow.deleteAccount(); 
        Test.stopTest();
       
        //Verify Result
        List<Account> accNew = [Select id,Name from Account WHERE Name =: AccName ];
        System.assert((accNew.Size() == 0),'AccountDeleted');
    }
    
    //Negtive Test Case of DELETE
     @isTest static void testNegDelete(){ 
       
         //ARRANGE - setup request
        RestRequest request = new RestRequest();
        RestResponse res = new RestResponse();
        request.requestUri ='https://yts-dev-ed.salesforce.com/services/apexrest/account/';
        request.addHeader('Content-Type', 'application/json');
        request.httpMethod = 'DELETE';
        request.requestBody = Blob.valueof('{}');
        RestContext.request = request;
        RestContext.response= res;
         
        Test.startTest(); 
        AccountShow.deleteAccount();
        Test.stopTest();
    }
    
    //Postive Test Case of PUT
    @isTest static void testPut(){
        
        //ARRANGE - setup request
        RestRequest request = new RestRequest();
        RestResponse res = new RestResponse();
        request.addHeader('Content-Type', 'application/json');
        request.httpMethod = 'PUT';
        String JsonMsg='{"Id":"0010o00002KGy2oAAD","Name":"Test Co","Phone":"9878285824","Email":"agc@gmail.com", "Website":"Test.com"}';
        AccountShowWrapper jsonwrap =(AccountShowWrapper)JSON.deserialize(JsonMsg,AccountShowWrapper.class);
        Account accN = new Account();
        accN.Name = jsonWrap.Name;
        accN.Email__c = jsonWrap.Email;
        accN.Phone = jsonWrap.Phone;
        accN.Website = jsonWrap.Website;
        upsert accN Email__c;
        request.requestBody = Blob.valueof(JsonMsg);
        RestContext.request = request;
        RestContext.response= res;
        
        Test.startTest();
        AccountShow.putAccount();
        Test.stopTest();
        //Verify Result
        Account accVer = [Select id,Name from Account Where Name = :accN.Name Limit 1];
        System.assertEquals('Test Co',accN.Name);
    }
    
    //Negtive Test Case of Put
    @isTest static void testNegPut(){
        
        //ARRANGE - setup request
        RestRequest request = new RestRequest();
        RestResponse res = new RestResponse();
        request.addHeader('Content-Type', 'application/json');
        request.httpMethod = 'PUT';
        request.requestBody = Blob.valueof('{}');
        RestContext.request = request;
        RestContext.response= res;
        
        Test.startTest();
        AccountShow.putAccount();
        Test.stopTest();
    }
    
    static Account createTestData(){
        Account acc = new Account();
        acc.Name = 'John';
        acc.Phone = '9876543210';
        acc.Description = 'Only for Test';
        acc.Email__c = 'abco@gmail.com ';
        acc.Website ='test.com';
        insert acc;
        return acc;
    }
    
    //Get Method
    static AccountShowWrapper getAccWrap(){
        AccountShowWrapper jsonWrap = new AccountShowWrapper();
        Account accN = createTestData();
        jsonWrap.Id = accN.Id;
        jsonWrap.Name = 'Test';
        jsonWrap.Email = 'email@gmail.com';
        jsonWrap.Phone = '987678978';
        jsonWrap.Website = 'jsonWrapebsite.com';
        return jsonWrap;
    } 
}
